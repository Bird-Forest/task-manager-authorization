{"version":3,"file":"static/js/776.b50ea274.chunk.js","mappings":"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","sources":["pages/Page.styled.js","components/TaskForm/TaskForm.styled.js","components/TaskForm/TaskForm.jsx","components/Task/Task.styled.js","components/Task/Task.jsx","components/Task/TaskList.jsx","pages/TasksPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapTasksPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-width: 290px;\n  margin-top: 78px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 0px;\n`;\nexport const WrapRegisterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  margin: 78px auto 0 auto;\n  padding: 0;\n  background-color: #e3f2fd;\n`;\nexport const TitleRegisterPage = styled.h2`\n  font-size: 24px;\n  color: #1769aa;\n  padding: 0;\n  margin: 0;\n`;\nexport const WrapLoginPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  margin: 78px auto 0 auto;\n  padding: 0;\n`;\nexport const TitleLoginPage = styled.h2`\n  font-size: 24px;\n  color: #1769aa;\n  padding: 0;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport const FormTask = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* min-width: 300px; */\n  /* gap: 10px; */\n  padding: 0;\n  /* margin: 0 auto; */\n  /* margin-right: auto;\n  margin-left: auto; */\n  @media screen and (min-width: 380px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  }\n`;\nexport const InputForm = styled.input`\n  display: flex;\n  background-color: #2196f3;\n  color: white;\n  min-width: 220px;\n  height: 44px;\n  font-size: 16px;\n  font-weight: 500;\n  border-bottom-left-radius: 25px;\n  border-top-left-radius: 25px;\n  border: 1px solid #2196f3;\n  outline: #2196f3;\n  padding: 0 16px;\n  margin: 0;\n  @media screen and (min-width: 380px) {\n    min-width: 300px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 420px;\n  }\n`;\nexport const BtnForm = styled.button`\n  display: inline-block;\n  border-top-right-radius: 25px;\n  border-bottom-right-radius: 25px;\n  background-color: #2196f3;\n  border: 1px solid #2196f3;\n  outline: #2196f3;\n  width: 60px;\n  height: 46px;\n  padding: 0;\n  cursor: pointer;\n  color: #1769aa;\n  /* -webkit-box-shadow: 0px 5px 6px 1px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 5px 6px 1px rgba(0, 0, 0, 0.75); */\n\n  /* &:hover,\n  :focus {\n    background-color: rgb(77, 106, 255);\n    outline: 3px solid rgb(77, 106, 255);\n    border: 3px solid rgb(77, 106, 255);\n  } */\n  .icon-add {\n    width: 28px;\n    height: 28px;\n    fill: white;\n  }\n  .icon-add:hover,\n  .icon-add:focus {\n    fill: #1769aa;\n  }\n  /* @media screen and (min-width: 600px) {\n    width: 48px;\n    height: 48px;\n  } */\n`;\n","import React from 'react';\nimport { FaPenToSquare } from 'react-icons/fa6';\nimport { BtnForm, FormTask, InputForm } from './TaskForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasksSlice';\n\nexport default function TaskForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    if (title !== '') {\n      dispatch(addTask(title));\n      event.target.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n  return (\n    <FormTask onSubmit={handleSubmit}>\n      <InputForm type=\"title\" name=\"title\" placeholder=\"Enter task text...\" />\n      <BtnForm type=\"submit\">\n        <FaPenToSquare className=\"icon-add\" />\n      </BtnForm>\n    </FormTask>\n  );\n}\n// GrEdit\n// FaPenToSquare\n// FaPenToSquare\n","import styled from 'styled-components';\n\nexport const WrapList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  /* min-width: 300px; */\n  gap: 8px;\n  padding: 0;\n  /* margin: 0 auto; */\n  @media screen and (min-width: 380px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  }\n`;\n\nexport const WrapTask = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* background-color: white; */\n  min-width: 290px;\n  height: 44px;\n  padding: 0;\n  margin: 0;\n  @media screen and (min-width: 380px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 420px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 480px;\n  }\n`;\n\nexport const TextTask = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${props => props.color};\n  border-radius: 25px;\n  border: 1px solid #2196f3;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const Text = styled.p`\n  display: inline-block;\n  width: 220px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #2c387e;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0;\n  padding: 0 16px;\n  @media screen and (min-width: 380px) {\n    min-width: 300px;\n  }\n  @media screen and (min-width: 440px) {\n    min-width: 360px;\n  }\n  @media screen and (min-width: 500px) {\n    width: 420px;\n  }\n`;\n\nexport const BtnSetting = styled.button`\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n  background-color: #2196f3;\n  border: 1px solid #2196f3;\n  outline: #2196f3;\n  width: 60px;\n  height: 44px;\n  border-top-right-radius: 25px;\n  border-bottom-right-radius: 25px;\n  cursor: pointer;\n  /* \n  &:hover .SettingTask,\n  &:focus .SettingTask {\n    transform: translate(0, 0);\n    opacity: 1;\n  } */\n  .icon-setting {\n    width: 28px;\n    height: 28px;\n    fill: white;\n  }\n  .icon-setting:hover,\n  .icon-setting:focus {\n    fill: #1769aa;\n  }\n`;\n\nexport const SettingTask = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 4px;\n  background-color: #2196f3;\n  color: white;\n  width: 250px;\n  height: 44px;\n  border-bottom-left-radius: 25px;\n  border-top-left-radius: 25px;\n  border: 1px solid #2196f3;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  transform: translate(0, 0);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  /* opacity: 0; */\n  right: 0;\n`;\n\nexport const BtnStatus = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2196f3;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  .icon-color {\n    width: 24px;\n    height: 24px;\n    fill: #2196f3;\n  }\n  .icon-color:hover,\n  .icon-color:focus {\n    width: 24px;\n    height: 24px;\n    fill: white;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: 50%;\n  border: 2px solid #2196f3;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  cursor: pointer;\n  /* -webkit-box-shadow: 0px 5px 6px 1px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 5px 6px 1px rgba(0, 0, 0, 0.75); */\n  /* &:hover,\n  :focus {\n    background-color: #1769aa;\n  } */\n\n  .icon-delete {\n    width: 20px;\n    height: 20px;\n    fill: #2196f3;\n  }\n  .icon-delete:hover,\n  .icon-delete:focus {\n    fill: #1769aa;\n  }\n  @media screen and (min-width: 600px) {\n    width: 40px;\n    height: 40px;\n    .icon-delete {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  BtnDelete,\n  BtnSetting,\n  BtnStatus,\n  SettingTask,\n  Text,\n  TextTask,\n  WrapTask,\n} from './Task.styled';\nimport { BsFillTrash3Fill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { deleteTask, changeTaskColor } from 'redux/tasksSlice';\nimport { BsEmojiWink } from 'react-icons/bs';\nimport { FaCogs } from 'react-icons/fa';\n// import { AiFillSetting } from 'react-icons/ai';\n\nexport default function Task({ task }) {\n  const dispatch = useDispatch();\n  const [isMoving, setIsMoving] = useState(false);\n\n  const handleSettingClick = () => {\n    setIsMoving(!isMoving);\n  };\n\n  return (\n    <WrapTask id={nanoid()}>\n      <TextTask key={task.id} style={{ backgroundColor: task.color }}>\n        <Text>{task.title}</Text>\n        <SettingTask\n          style={{\n            transform: isMoving ? 'translate(0, 0)' : 'translate(80%, 0)',\n          }}\n        >\n          <BtnStatus\n            color=\"#ff5252\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#ff5252', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnStatus\n            color=\"#ffee58\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#ffee58', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnStatus\n            color=\"#00e676\"\n            onClick={() =>\n              dispatch(changeTaskColor({ color: '#00e676', id: task.id }))\n            }\n          >\n            <BsEmojiWink className=\"icon-color\" />\n          </BtnStatus>\n          <BtnDelete onClick={() => dispatch(deleteTask(task.id))}>\n            <BsFillTrash3Fill className=\"icon-delete\" />\n          </BtnDelete>\n        </SettingTask>\n        <BtnSetting onClick={handleSettingClick}>\n          <FaCogs className=\"icon-setting\" />\n        </BtnSetting>\n      </TextTask>\n    </WrapTask>\n  );\n}\n\n// BsEmojiWink; import { IconName } from \"react-icons/bs\";\n// GrSettingsOption; GrEdit  import { IconName } from \"react-icons/gr\";\n// AiFillSetting;\n\n// FaCogs\n","import React from 'react';\nimport { WrapList } from './Task.styled';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleTasks,\n} from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Task from 'components/Task/Task';\n\nexport default function TaskList() {\n  // const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const newTasks = useSelector(selectVisibleTasks);\n\n  // const newTasks = useSelector(selectTasks);\n  console.log(newTasks);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n\n  const showArr = Array.isArray(newTasks) && newTasks.length !== 0;\n  return (\n    <>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n      <WrapList>\n        {showArr && newTasks.map(task => <Task task={task} key={nanoid()} />)}\n      </WrapList>\n    </>\n  );\n}\n","// import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/selectors';\n// import { fetchTasks } from 'redux/operations';\nimport TaskForm from 'components/TaskForm/TaskForm';\n// import TaskList from 'components/Task/TaskList';\nimport { WrapTasksPage } from './Page.styled';\nimport TaskList from 'components/Task/TaskList';\n\nexport default function TasksPage() {\n  // const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  // useEffect(() => {\n  //   dispatch(fetchTasks());\n  // }, [dispatch]);\n\n  return (\n    <WrapTasksPage>\n      {/* <title>Your tasks</title> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskForm />\n      <TaskList />\n    </WrapTasksPage>\n  );\n}\n"],"names":["WrapTasksPage","styled","WrapRegisterPage","TitleRegisterPage","WrapLoginPage","TitleLoginPage","FormTask","InputForm","BtnForm","TaskForm","dispatch","useDispatch","onSubmit","event","preventDefault","title","target","elements","value","addTask","reset","alert","type","name","placeholder","className","WrapList","WrapTask","TextTask","props","color","Text","BtnSetting","SettingTask","BtnStatus","BtnDelete","Task","task","useState","isMoving","setIsMoving","id","nanoid","style","backgroundColor","transform","onClick","changeTaskColor","deleteTask","TaskList","isLoading","useSelector","selectIsLoading","error","selectError","newTasks","selectVisibleTasks","console","log","showArr","Array","isArray","length","map","TasksPage"],"sourceRoot":""}